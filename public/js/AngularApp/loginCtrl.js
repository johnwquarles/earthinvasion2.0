'use strict';

angular.module('app.controllers').controller('loginCtrl', function ($http, $window, $timeout) {
  var vm = this;
  var theresAnError = false;
  var events = [];
  vm.errorMsg = 'placeholder so that it takes up space';

  vm.login = function () {
    if (vm.username === (undefined || "") || vm.password === (undefined || "")) return errHandle({ data: "Please enter a username and/or password!" });
    $http.get('/loginReq', { params: { username: vm.username, password: vm.password } }).then(hardRedirect)['catch'](errHandle);
  };

  vm.register = function () {
    if (vm.username === (undefined || "") || vm.password === (undefined || "")) return errHandle({ data: "Please enter a username and/or password!" });
    $http.get('/registerReq', { params: { username: vm.username, password: vm.password } }).then(hardRedirect)['catch'](errHandle);
  };

  vm.guest = function () {
    $http.get('/guestReq').then(hardRedirect)['catch'](errHandle);
  };

  vm.displayError = function () {
    return theresAnError;
  };

  function hardRedirect() {
    $window.location.href = $window.location.origin + '/';
  }

  function errHandle(err) {
    events.forEach(function (event) {
      $timeout.cancel(event);
    });
    vm.errorMsg = err.data;
    theresAnError = true;
    events.push($timeout(function () {
      theresAnError = false;
    }, 3000));
  }
});
// this is how the sockets workkkk:
//
// vm.register = function () {
//   socket.emit('test', {email: vm.email, password: vm.password});
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZ3VsYXJBcHAvbG9naW5DdHJsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUNoQyxVQUFVLENBQUMsV0FBVyxFQUFFLFVBQVMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUU7QUFDMUQsTUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBQ2QsTUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO0FBQzFCLE1BQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSwwQ0FBMEMsQ0FBQzs7QUFFdEQsSUFBRSxDQUFDLEtBQUssR0FBRyxZQUFZO0FBQ3JCLFFBQUksRUFBRSxDQUFDLFFBQVEsTUFBTSxTQUFTLElBQUksRUFBRSxDQUFBLEFBQUMsSUFBSSxFQUFFLENBQUMsUUFBUSxNQUFNLFNBQVMsSUFBSSxFQUFFLENBQUEsQUFBQyxFQUFFLE9BQU8sU0FBUyxDQUFDLEVBQUMsSUFBSSxFQUFFLDBDQUEwQyxFQUFDLENBQUMsQ0FBQztBQUNqSixTQUFLLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxFQUFDLE1BQU0sRUFBRSxFQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxFQUFDLEVBQUUsQ0FBQyxDQUNoRixJQUFJLENBQUMsWUFBWSxDQUFDLFNBQ2IsQ0FBQyxTQUFTLENBQUMsQ0FBQztHQUNuQixDQUFBOztBQUVELElBQUUsQ0FBQyxRQUFRLEdBQUcsWUFBWTtBQUN4QixRQUFJLEVBQUUsQ0FBQyxRQUFRLE1BQU0sU0FBUyxJQUFJLEVBQUUsQ0FBQSxBQUFDLElBQUksRUFBRSxDQUFDLFFBQVEsTUFBTSxTQUFTLElBQUksRUFBRSxDQUFBLEFBQUMsRUFBRSxPQUFPLFNBQVMsQ0FBQyxFQUFDLElBQUksRUFBRSwwQ0FBMEMsRUFBQyxDQUFDLENBQUM7QUFDakosU0FBSyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsRUFBQyxNQUFNLEVBQUUsRUFBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsRUFBQyxFQUFFLENBQUMsQ0FDbkYsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUNiLENBQUMsU0FBUyxDQUFDLENBQUM7R0FDbkIsQ0FBQTs7QUFFRCxJQUFFLENBQUMsS0FBSyxHQUFHLFlBQVk7QUFDckIsU0FBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUNiLENBQUMsU0FBUyxDQUFDLENBQUM7R0FDbkIsQ0FBQTs7QUFFRCxJQUFFLENBQUMsWUFBWSxHQUFHLFlBQVk7QUFDNUIsV0FBTyxhQUFhLENBQUM7R0FDdEIsQ0FBQTs7QUFFRCxXQUFTLFlBQVksR0FBSTtBQUN2QixXQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBTSxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sTUFBRyxDQUFDO0dBQ3ZEOztBQUVELFdBQVMsU0FBUyxDQUFFLEdBQUcsRUFBRTtBQUN2QixVQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsS0FBSyxFQUFFO0FBQzlCLGNBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDeEIsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO0FBQ3ZCLGlCQUFhLEdBQUcsSUFBSSxDQUFDO0FBQ3JCLFVBQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVk7QUFDL0IsbUJBQWEsR0FBRyxLQUFLLENBQUM7S0FDdkIsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0dBQ1g7Q0FDRixDQUFDLENBQUEiLCJmaWxlIjoiQW5ndWxhckFwcC9sb2dpbkN0cmwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwLmNvbnRyb2xsZXJzJylcbi5jb250cm9sbGVyKCdsb2dpbkN0cmwnLCBmdW5jdGlvbigkaHR0cCwgJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgdmFyIHZtID0gdGhpcztcbiAgdmFyIHRoZXJlc0FuRXJyb3IgPSBmYWxzZTtcbiAgdmFyIGV2ZW50cyA9IFtdO1xuICB2bS5lcnJvck1zZyA9IGBwbGFjZWhvbGRlciBzbyB0aGF0IGl0IHRha2VzIHVwIHNwYWNlYDtcblxuICB2bS5sb2dpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodm0udXNlcm5hbWUgPT09ICh1bmRlZmluZWQgfHwgXCJcIikgfHwgdm0ucGFzc3dvcmQgPT09ICh1bmRlZmluZWQgfHwgXCJcIikpIHJldHVybiBlcnJIYW5kbGUoe2RhdGE6IFwiUGxlYXNlIGVudGVyIGEgdXNlcm5hbWUgYW5kL29yIHBhc3N3b3JkIVwifSk7XG4gICAgJGh0dHAuZ2V0KCcvbG9naW5SZXEnLCB7cGFyYW1zOiB7dXNlcm5hbWU6IHZtLnVzZXJuYW1lLCBwYXNzd29yZDogdm0ucGFzc3dvcmR9IH0pXG4gICAgLnRoZW4oaGFyZFJlZGlyZWN0KVxuICAgIC5jYXRjaChlcnJIYW5kbGUpO1xuICB9XG5cbiAgdm0ucmVnaXN0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHZtLnVzZXJuYW1lID09PSAodW5kZWZpbmVkIHx8IFwiXCIpIHx8IHZtLnBhc3N3b3JkID09PSAodW5kZWZpbmVkIHx8IFwiXCIpKSByZXR1cm4gZXJySGFuZGxlKHtkYXRhOiBcIlBsZWFzZSBlbnRlciBhIHVzZXJuYW1lIGFuZC9vciBwYXNzd29yZCFcIn0pO1xuICAgICRodHRwLmdldCgnL3JlZ2lzdGVyUmVxJywge3BhcmFtczoge3VzZXJuYW1lOiB2bS51c2VybmFtZSwgcGFzc3dvcmQ6IHZtLnBhc3N3b3JkfSB9KVxuICAgIC50aGVuKGhhcmRSZWRpcmVjdClcbiAgICAuY2F0Y2goZXJySGFuZGxlKTtcbiAgfVxuXG4gIHZtLmd1ZXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICRodHRwLmdldCgnL2d1ZXN0UmVxJylcbiAgICAudGhlbihoYXJkUmVkaXJlY3QpXG4gICAgLmNhdGNoKGVyckhhbmRsZSk7XG4gIH1cblxuICB2bS5kaXNwbGF5RXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoZXJlc0FuRXJyb3I7XG4gIH1cblxuICBmdW5jdGlvbiBoYXJkUmVkaXJlY3QgKCkge1xuICAgICR3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAkeyR3aW5kb3cubG9jYXRpb24ub3JpZ2lufS9gO1xuICB9XG5cbiAgZnVuY3Rpb24gZXJySGFuZGxlIChlcnIpIHtcbiAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICR0aW1lb3V0LmNhbmNlbChldmVudCk7XG4gICAgfSk7XG4gICAgdm0uZXJyb3JNc2cgPSBlcnIuZGF0YTtcbiAgICB0aGVyZXNBbkVycm9yID0gdHJ1ZTtcbiAgICBldmVudHMucHVzaCgkdGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0aGVyZXNBbkVycm9yID0gZmFsc2U7XG4gICAgfSwgMzAwMCkpO1xuICB9XG59KVxuICAvLyB0aGlzIGlzIGhvdyB0aGUgc29ja2V0cyB3b3Jra2trOlxuICAvL1xuICAvLyB2bS5yZWdpc3RlciA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gICBzb2NrZXQuZW1pdCgndGVzdCcsIHtlbWFpbDogdm0uZW1haWwsIHBhc3N3b3JkOiB2bS5wYXNzd29yZH0pO1xuICAvLyB9XG4iXX0=
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJBbmd1bGFyQXBwL2xvZ2luQ3RybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwLmNvbnRyb2xsZXJzJylcbi5jb250cm9sbGVyKCdsb2dpbkN0cmwnLCBmdW5jdGlvbigkaHR0cCwgJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgdmFyIHZtID0gdGhpcztcbiAgdmFyIHRoZXJlc0FuRXJyb3IgPSBmYWxzZTtcbiAgdmFyIGV2ZW50cyA9IFtdO1xuICB2bS5lcnJvck1zZyA9IGBwbGFjZWhvbGRlciBzbyB0aGF0IGl0IHRha2VzIHVwIHNwYWNlYDtcblxuICB2bS5sb2dpbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodm0udXNlcm5hbWUgPT09ICh1bmRlZmluZWQgfHwgXCJcIikgfHwgdm0ucGFzc3dvcmQgPT09ICh1bmRlZmluZWQgfHwgXCJcIikpIHJldHVybiBlcnJIYW5kbGUoe2RhdGE6IFwiUGxlYXNlIGVudGVyIGEgdXNlcm5hbWUgYW5kL29yIHBhc3N3b3JkIVwifSk7XG4gICAgJGh0dHAuZ2V0KCcvbG9naW5SZXEnLCB7cGFyYW1zOiB7dXNlcm5hbWU6IHZtLnVzZXJuYW1lLCBwYXNzd29yZDogdm0ucGFzc3dvcmR9IH0pXG4gICAgLnRoZW4oaGFyZFJlZGlyZWN0KVxuICAgIC5jYXRjaChlcnJIYW5kbGUpO1xuICB9XG5cbiAgdm0ucmVnaXN0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHZtLnVzZXJuYW1lID09PSAodW5kZWZpbmVkIHx8IFwiXCIpIHx8IHZtLnBhc3N3b3JkID09PSAodW5kZWZpbmVkIHx8IFwiXCIpKSByZXR1cm4gZXJySGFuZGxlKHtkYXRhOiBcIlBsZWFzZSBlbnRlciBhIHVzZXJuYW1lIGFuZC9vciBwYXNzd29yZCFcIn0pO1xuICAgICRodHRwLmdldCgnL3JlZ2lzdGVyUmVxJywge3BhcmFtczoge3VzZXJuYW1lOiB2bS51c2VybmFtZSwgcGFzc3dvcmQ6IHZtLnBhc3N3b3JkfSB9KVxuICAgIC50aGVuKGhhcmRSZWRpcmVjdClcbiAgICAuY2F0Y2goZXJySGFuZGxlKTtcbiAgfVxuXG4gIHZtLmd1ZXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICRodHRwLmdldCgnL2d1ZXN0UmVxJylcbiAgICAudGhlbihoYXJkUmVkaXJlY3QpXG4gICAgLmNhdGNoKGVyckhhbmRsZSk7XG4gIH1cblxuICB2bS5kaXNwbGF5RXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoZXJlc0FuRXJyb3I7XG4gIH1cblxuICBmdW5jdGlvbiBoYXJkUmVkaXJlY3QgKCkge1xuICAgICR3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAkeyR3aW5kb3cubG9jYXRpb24ub3JpZ2lufS9gO1xuICB9XG5cbiAgZnVuY3Rpb24gZXJySGFuZGxlIChlcnIpIHtcbiAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICR0aW1lb3V0LmNhbmNlbChldmVudCk7XG4gICAgfSk7XG4gICAgdm0uZXJyb3JNc2cgPSBlcnIuZGF0YTtcbiAgICB0aGVyZXNBbkVycm9yID0gdHJ1ZTtcbiAgICBldmVudHMucHVzaCgkdGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0aGVyZXNBbkVycm9yID0gZmFsc2U7XG4gICAgfSwgMzAwMCkpO1xuICB9XG59KVxuICAvLyB0aGlzIGlzIGhvdyB0aGUgc29ja2V0cyB3b3Jra2trOlxuICAvL1xuICAvLyB2bS5yZWdpc3RlciA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gICBzb2NrZXQuZW1pdCgndGVzdCcsIHtlbWFpbDogdm0uZW1haWwsIHBhc3N3b3JkOiB2bS5wYXNzd29yZH0pO1xuICAvLyB9XG4iXSwiZmlsZSI6IkFuZ3VsYXJBcHAvbG9naW5DdHJsLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=